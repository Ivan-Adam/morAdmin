/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.14.v20181114
 * Generated at: 2019-04-20 10:25:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>管理员登录 - morAdmin 1.0</title>\r\n");
      out.write("    <meta name=\"renderer\" content=\"webkit|ie-comp|ie-stand\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0\">\r\n");
      out.write("    <meta http-equiv=\"Cache-Control\" content=\"no-siteapp\" />\r\n");
      out.write("    <link rel=\"shortcut icon\" href=\"images/fly.png\" type=\"image/x-icon\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/login.css\">\r\n");
      out.write("    <script src=\"layui-v2.4.5/layui/layui.js\" charset=\"utf-8\"></script>\r\n");
      out.write("    <script src=\"js/login.js\" charset=\"utf-8\"></script>\r\n");
      out.write("    <script src=\"./js/HashEncrypt.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        .layui-form-onswitch{\r\n");
      out.write("            border-color: #189F92;\r\n");
      out.write("            background-color: #189F92;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"login\">\r\n");
      out.write("        <div class=\"message\">morAdmin 1.0 - 管理员登录</div>\r\n");
      out.write("        <div id=\"dark\"></div>\r\n");
      out.write("        <form action=\"login\" method=\"post\" class=\"layui-form\" onsubmit=\"return md5()\">\r\n");
      out.write("            <div class=\"layui-form-item input-item\">\r\n");
      out.write("                <label for=\"loginName\">账号</label>\r\n");
      out.write("                <input type=\"text\" placeholder=\"请输入登录账号\" autocomplete=\"off\" id=\"loginName\" name=\"loginName\" class=\"layui-input\" lay-verify=\"required\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <div class=\"layui-form-item input-item\">\r\n");
      out.write("                <label for=\"loginPwd\">密码</label>\r\n");
      out.write("                <input type=\"password\" placeholder=\"请输入登录密码\" autocomplete=\"off\" id=\"loginPwd\" class=\"layui-input\" lay-verify=\"required\">\r\n");
      out.write("                <input type=\"hidden\" name=\"loginPwd\" id=\"md5_pwd\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <hr>\r\n");
      out.write("            <div class=\"layui-form-item input-item\" style=\"display: inline-block\">\r\n");
      out.write("                <label for=\"captche\">验证码</label>\r\n");
      out.write("                <input type=\"text\" placeholder=\"请输入图片中的验证码\" autocomplete=\"off\" id=\"captche\" name=\"captche\" class=\"layui-input\" style=\"width: 230px; display: inline-block\">\r\n");
      out.write("            </div>\r\n");
      out.write("            <a href=\"javascript:reloadCode();\" style=\"border: silver 1px solid; width: 80px; height: 36px; display: inline-block;vertical-align: top\"><img id=\"imageCode\" src=\"captche\" alt=\"\"></a>\r\n");
      out.write("            <a href=\"javascript:reloadCode();\" style=\"width: 38px;height: 38px;line-height: 38px; vertical-align: top\"><i class=\"layui-icon layui-icon-refresh-1\" style=\"font-size: 16px; color: #666666;\"></i></a>\r\n");
      out.write("            <div class=\"layui-form-item\">\r\n");
      out.write("                <div class=\"layui-input-block\" style=\"display: inline-block;margin-left: 10px;width: 100%\">\r\n");
      out.write("                    <input type=\"checkbox\" lay-skin=\"switch\" value=\"1\"><span style=\"margin-top: 8px;margin-left: 5px;display: inline-block;vertical-align: middle\">记住我</span>\r\n");
      out.write("                    <a href=\"javascript:register()\"><span style=\"float: right;margin-top: 8px;display: inline-block;vertical-align: middle;margin-right: 20px\">没有账号？</span></a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"layui-form-item\">\r\n");
      out.write("                <button type=\"submit\" id=\"submit\" class=\"layui-btn layui-block\" lay-filter=\"login\" style=\"width: 100%;height: 38px\">立&nbsp&nbsp即&nbsp&nbsp登&nbsp&nbsp录</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    function md5(){\r\n");
      out.write("        var loginPwd= document.getElementById('loginPwd');\r\n");
      out.write("        var md5_pwd=document.getElementById('md5_pwd');\r\n");
      out.write("        md5_pwd.value = HashEncrypt.MD5(loginPwd.value,false,false);\r\n");
      out.write("        return true;\r\n");
      out.write("    }\r\n");
      out.write("    <!--重新加载验证码-->\r\n");
      out.write("    function reloadCode() {\r\n");
      out.write("        var time = new Date().getTime();\r\n");
      out.write("        document.getElementById(\"imageCode\").src=\"captche?d=\"+time;\r\n");
      out.write("    }\r\n");
      out.write("    function register() {\r\n");
      out.write("        layer.msg('别闹，让神仙给你注册一个去', {\r\n");
      out.write("            time: 2000,\r\n");
      out.write("        });\r\n");
      out.write("    }\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("    //Demo\r\n");
      out.write("    layui.use('form', function(){\r\n");
      out.write("        var form = layui.form;\r\n");
      out.write("\r\n");
      out.write("        //监听提交\r\n");
      out.write("        form.on('submit(formDemo)', function(data){\r\n");
      out.write("            layer.msg(JSON.stringify(data.field));\r\n");
      out.write("            return false;\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
