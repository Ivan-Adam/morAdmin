/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.14.v20181114
 * Generated at: 2019-04-20 05:54:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("  \n");
      out.write("  <head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>添加管理员-WeAdmin Frame型后台管理系统-WeAdmin 1.0</title>\n");
      out.write("    <meta name=\"renderer\" content=\"webkit\">\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"../../css/font.css\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"../../css/weadmin.css\">\n");
      out.write("    <!-- 让IE8/9支持媒体查询，从而兼容栅格 -->\n");
      out.write("    <!--[if lt IE 9]>\n");
      out.write("      <script src=\"https://cdn.staticfile.org/html5shiv/r29/html5.min.js\"></script>\n");
      out.write("      <script src=\"https://cdn.staticfile.org/respond.js/1.4.2/respond.min.js\"></script>\n");
      out.write("    <![endif]-->\n");
      out.write("  </head>\n");
      out.write("  \n");
      out.write("  <body>\n");
      out.write("    <div class=\"weadmin-body\">\n");
      out.write("        <form class=\"layui-form\">\n");
      out.write("          <div class=\"layui-form-item\">\n");
      out.write("              <label for=\"username\" class=\"layui-form-label\">\n");
      out.write("                  <span class=\"we-red\">*</span>登录名\n");
      out.write("              </label>\n");
      out.write("              <div class=\"layui-input-inline\">\n");
      out.write("                  <input type=\"text\" id=\"username\" name=\"username\" required=\"\" lay-verify=\"required\"\n");
      out.write("                  autocomplete=\"off\" class=\"layui-input\">\n");
      out.write("              </div>\n");
      out.write("              <div class=\"layui-form-mid layui-word-aux\">\n");
      out.write("                  <span class=\"we-red\">*</span>将会成为您唯一的登入名\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"layui-form-item\">\n");
      out.write("              <label for=\"phone\" class=\"layui-form-label\">\n");
      out.write("                  <span class=\"we-red\">*</span>手机\n");
      out.write("              </label>\n");
      out.write("              <div class=\"layui-input-inline\">\n");
      out.write("                  <input type=\"text\" id=\"phone\" name=\"phone\" required=\"\" lay-verify=\"phone\"\n");
      out.write("                  autocomplete=\"off\" class=\"layui-input\">\n");
      out.write("              </div>\n");
      out.write("              <div class=\"layui-form-mid layui-word-aux\">\n");
      out.write("                  <span class=\"we-red\">*</span>将会成为您唯一的登入名\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"layui-form-item\">\n");
      out.write("              <label for=\"L_email\" class=\"layui-form-label\">\n");
      out.write("                  <span class=\"we-red\">*</span>邮箱\n");
      out.write("              </label>\n");
      out.write("              <div class=\"layui-input-inline\">\n");
      out.write("                  <input type=\"text\" id=\"L_email\" name=\"email\" required=\"\" lay-verify=\"email\"\n");
      out.write("                  autocomplete=\"off\" class=\"layui-input\">\n");
      out.write("              </div>\n");
      out.write("              <div class=\"layui-form-mid layui-word-aux\">\n");
      out.write("                  <span class=\"we-red\">*</span>\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"layui-form-item\">\n");
      out.write("              <label class=\"layui-form-label\"><span class=\"we-red\">*</span>角色</label>\n");
      out.write("              <div class=\"layui-input-block\">\n");
      out.write("                <input type=\"checkbox\" name=\"like1[write]\" lay-skin=\"primary\" title=\"超级管理员\" checked=\"\">\n");
      out.write("                <input type=\"checkbox\" name=\"like1[read]\" lay-skin=\"primary\" title=\"编辑人员\">\n");
      out.write("                <input type=\"checkbox\" name=\"like1[write]\" lay-skin=\"primary\" title=\"宣传人员\" checked=\"\">\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"layui-form-item\">\n");
      out.write("              <label for=\"L_pass\" class=\"layui-form-label\">\n");
      out.write("                  <span class=\"we-red\">*</span>密码\n");
      out.write("              </label>\n");
      out.write("              <div class=\"layui-input-inline\">\n");
      out.write("                  <input type=\"password\" id=\"L_pass\" name=\"pass\" required=\"\" lay-verify=\"pass\"\n");
      out.write("                  autocomplete=\"off\" class=\"layui-input\">\n");
      out.write("              </div>\n");
      out.write("              <div class=\"layui-form-mid layui-word-aux\">\n");
      out.write("                  6到16个字符\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"layui-form-item\">\n");
      out.write("              <label for=\"L_repass\" class=\"layui-form-label\">\n");
      out.write("                  <span class=\"we-red\">*</span>确认密码\n");
      out.write("              </label>\n");
      out.write("              <div class=\"layui-input-inline\">\n");
      out.write("                  <input type=\"password\" id=\"L_repass\" name=\"repass\" required=\"\" lay-verify=\"repass\"\n");
      out.write("                  autocomplete=\"off\" class=\"layui-input\">\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("          <div class=\"layui-form-item\">\n");
      out.write("              <label for=\"L_repass\" class=\"layui-form-label\"></label>\n");
      out.write("              <button  class=\"layui-btn\" lay-filter=\"add\" lay-submit=\"\">增加</button>\n");
      out.write("          </div>\n");
      out.write("      </form>\n");
      out.write("    </div>\n");
      out.write("\t\t<script src=\"../../lib/layui/layui.js\" charset=\"utf-8\"></script>\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("    \t\tlayui.extend({\n");
      out.write("\t\t\t\t\tadmin: '{/}../../static/js/admin'\n");
      out.write("\t\t\t\t});\n");
      out.write("        layui.use(['form','layer','admin'], function(){\n");
      out.write("          var form = layui.form,\n");
      out.write("          \tadmin = layui.admin,\n");
      out.write("          \tlayer = layui.layer;\n");
      out.write("          //自定义验证规则\n");
      out.write("          form.verify({\n");
      out.write("            nikename: function(value){\n");
      out.write("              if(value.length < 5){\n");
      out.write("                return '昵称至少得5个字符啊';\n");
      out.write("              }\n");
      out.write("            }\n");
      out.write("            ,pass: [/(.+){6,12}$/, '密码必须6到12位']\n");
      out.write("            ,repass: function(value){\n");
      out.write("                if($('#L_pass').val()!=$('#L_repass').val()){\n");
      out.write("                    return '两次密码不一致';\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("          });\n");
      out.write("\n");
      out.write("          //监听提交\n");
      out.write("          form.on('submit(add)', function(data){\n");
      out.write("            console.log(data);\n");
      out.write("            //发异步，把数据提交给php\n");
      out.write("            layer.alert(\"增加成功\", {icon: 6},function () {\n");
      out.write("                // 获得frame索引\n");
      out.write("                var index = parent.layer.getFrameIndex(window.name);\n");
      out.write("                //关闭当前frame\n");
      out.write("                parent.layer.close(index);\n");
      out.write("            });\n");
      out.write("            return false;\n");
      out.write("          });\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("  </body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
